name: Cross-Platform Build

on:
  push:
    tags:
      - 'v*'

# 添加全局权限配置
permissions:
  contents: write

jobs:
  build:
    name: Build Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux
          - goos: linux
            goarch: amd64
            output_name: flutter_ssl_hook_finder_linux_amd64
          - goos: linux
            goarch: arm64
            output_name: flutter_ssl_hook_finder_linux_arm64
          - goos: linux
            goarch: 386
            output_name: flutter_ssl_hook_finder_linux_386
          
          # Windows  
          - goos: windows
            goarch: amd64
            output_name: flutter_ssl_hook_finder_windows_amd64.exe
          - goos: windows
            goarch: 386
            output_name: flutter_ssl_hook_finder_windows_386.exe
          
          # macOS
          - goos: darwin
            goarch: amd64
            output_name: flutter_ssl_hook_finder_darwin_amd64
          - goos: darwin
            goarch: arm64
            output_name: flutter_ssl_hook_finder_darwin_arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: true

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -v -o ${{ matrix.output_name }}
      
      - name: Compress binary (Linux/macOS)
        if: matrix.goos != 'windows'
        run: |
          tar -czvf ${{ matrix.output_name }}.tar.gz ${{ matrix.output_name }}
      
      - name: Compress binary (Windows)
        if: matrix.goos == 'windows'
        run: |
          zip -j ${{ matrix.output_name }}.zip ${{ matrix.output_name }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: |
            ${{ matrix.output_name }}.*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    # 或者在这里添加权限配置
    # permissions:
    #   contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Display structure of downloaded files
        run: ls -R
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            */*.tar.gz
            */*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 